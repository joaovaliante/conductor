image:
  repository: apache/druid
  tag: 0.19.0

gCloudStorage:
  enabled: false
  secretName: google-cloud-key

broker:
  ## If false, broker will not be installed
  ##
  enabled: true
  name: broker
  replicaCount: 1
  port: 8082

  config:
    DRUID_XMX: 512m
    DRUID_XMS: 512m
    DRUID_MAXDIRECTMEMORYSIZE: 400m
    druid_processing_buffer_sizeBytes: '50000000'
    druid_processing_numMergeBuffers: 2
    druid_processing_numThreads: 1
    # druid_monitoring_monitors: '["org.apache.druid.client.cache.CacheMonitor", "org.apache.druid.server.metrics.QueryCountStatsMonitor"]'

  service:
    type: ClusterIP
    loadBalancerIP:

    labels: {}
    annotations: {}

coordinator:
  ## If false, coordinator will not be installed
  ##
  enabled: true
  name: coordinator
  replicaCount: 1
  port: 8081

  service:
    type: ClusterIP
    loadBalancerIP:

    labels: {}
    annotations: {}

overlord:
  ## If true, the separate overlord will be installed
  ##
  enabled: false
  name: overlord
  replicaCount: 1
  port: 8081

  service:
    type: ClusterIP
    loadBalancerIP:

    labels: {}
    annotations: {}


historical:
  ## If false, historical will not be installed
  ##
  enabled: true
  name: historical
  replicaCount: 1
  port: 8083
  serviceType: ClusterIP

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: "4Gi"
    # storageClass: "ssd"

  service:
    type: ClusterIP
    loadBalancerIP:
  
    labels: {}
    annotations: {}

middleManager:
  ## If false, middleManager will not be installed
  ##
  enabled: true
  name: middle-manager
  replicaCount: 1
  port: 8091
  serviceType: ClusterIP


  service:
    type: ClusterIP
    loadBalancerIP:
  
    labels: {}
    annotations: {}

router:
  ## If false, router will not be installed
  ##
  enabled: true
  name: router
  replicaCount: 1
  port: 8888
  serviceType: ClusterIP

  service:
    type: ClusterIP
    loadBalancerIP:
  
    labels: {}
    annotations: {}


# ------------------------------------------------------------------------------
# Zookeeper:
# ------------------------------------------------------------------------------

# zkHosts: druid-zookeeper-headless:2181

zookeeper:
  enabled: true
  ## Environmental variables to set in Zookeeper
  ##
  env:
    ## The JVM heap size to allocate to Zookeeper
    ZK_HEAP_SIZE: "512M"
  ## Configure Zookeeper headless
  headless:
    publishNotReadyAddresses: true


# ------------------------------------------------------------------------------
# MySQL:
# ------------------------------------------------------------------------------
mysql:
  enabled: false
  mysqlRootPassword: druidroot
  mysqlUser: druid
  mysqlPassword: druid
  mysqlDatabase: druid
  configurationFiles:
    mysql_collate.cnf: |-
      [mysqld]
      character-set-server=utf8
      collation-server=utf8_unicode_ci
# ------------------------------------------------------------------------------
# postgres:
# ------------------------------------------------------------------------------
postgresql:
  enabled: true
  postgresqlUsername: druid
  postgresqlPassword: druid
  postgresqlDatabase: druid
  service:
    port: 5432

registry:
  servers:
  - name: conductorcr
    server: conductorcr.azurecr.io
    username: conductorcr
    password: ${registry_password}
